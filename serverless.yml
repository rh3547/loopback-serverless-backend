service: loopback-serverless-api

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1
  timeout: 900

functions:
  api:
    DependsOn: CognitoUserPool
    handler: lambda.handler # reference the file and exported method
    events: # events trigger lambda functions
      - http: # this is an API Gateway HTTP event trigger
          path: /
          method: ANY
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - CognitoUserPoolAppUserPool
                - Arn
      - http: # all routes get proxied to the Express router
          path: /{proxy+}
          method: ANY
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - CognitoUserPoolAppUserPool
                - Arn

  preSignUp:
    handler: lambda-presignup.handler
    events:
      - cognitoUserPool:
          pool: AppUserPool
          trigger: PreSignUp

resources:
  Resources:
    # Creates a user pool in cognito
    CognitoUserPoolAppUserPool:
      Type: "AWS::Cognito::UserPool"
      Properties:
        UserPoolName: "loopback-serverless-api-userpool"
        MfaConfiguration: "OFF"
        AutoVerifiedAttributes:
          - email
        AliasAttributes:
          - email
        Schema:
          - Name: email
            AttributeDataType: String
            Mutable: false
            Required: true

    # Creates a User Pool Client
    UserPoolClient:
      Type: "AWS::Cognito::UserPoolClient"
      Properties:
        ClientName: "loopback-serverless-api-mobile"
        GenerateSecret: false
        UserPoolId:
          Ref: CognitoUserPoolAppUserPool

plugins:
  - serverless-offline
